<?xml version="1.0"?>
<launch>
  <!-- Set the car to be simulator -->
  <arg name="racecar_version" default="SIM"/>
  <param name="/racecar_version" value="$(arg racecar_version)"/>
  <arg name="tire_model" default="pacejka"/> <!-- pacejka or linear -->
  <param name="/tire_model" value="$(arg tire_model)"/>

  <!-- Set the gb optimizer config -->
  <arg name="gb_conf_path" default="$(find stack_master)/config/global_planner_params.yaml"/>
  <!-- Launch a mapping bool -->
  <arg name="mapping_bool" default="False"/>
  <!-- rviz bool -->
  <arg name="rviz" default="True"/>
  <!-- base_maps_dir lets you choose if you want to use maps that are only available for sim because of missing .pbstream stack_master for real car maps f1tenth_simulator for sim only-->
  <arg name="base_map_dir" default="$(find stack_master)"/>

  <!-- Launch a map from the maps folder-->
  <arg name="map_name" default="hangar"/>
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg base_map_dir)/maps/$(arg map_name)/$(arg map_name).yaml"/>

  <!-- Launch the racecar model -->
  <include file="$(find f1tenth_simulator)/launch/racecar_model.launch"/>

  <!-- Add the tire parameters -->
  <rosparam ns="model_params" command="load" file="$(find stack_master)/config/$(arg racecar_version)/$(arg racecar_version)_$(arg tire_model).yaml"/>

  <!-- Launch the mux node with the parameters from params.yaml -->
  <node pkg="f1tenth_simulator" name="mux_controller" type="mux" output="screen">
    <rosparam command="load" file="$(find f1tenth_simulator)/pbl_params.yaml"/>
  </node>

  <!-- Launch the behavior controller node with the parameters from params.yaml -->
  <node pkg="f1tenth_simulator" name="behavior_controller" type="behavior_controller" output="screen">
    <rosparam command="load" file="$(find f1tenth_simulator)/pbl_params.yaml"/>
  </node>

  <!-- IF CONDITION ON MAPPING_BOOL -->
  <group if="$(arg mapping_bool)">
    <!--  launch centerline_extraction -->
    <node pkg="gb_optimizer" type="global_planner_node.py" name="global_planner" output="screen">
      <rosparam file="$(arg gb_conf_path)" />
      <param name="test_on_car" value="False"/>
      <param name="map_editor" value="False"/>
      <param name="create_map" value="True"/>
      <param name="map_name" value="$(arg map_name)"/>
      <param name="map_dir" value="$(arg base_map_dir)/maps/$(arg map_name)/"/>
    </node>

    <!-- Launch Sector Slicer from Utils -->
    <node pkg="sector_tuner" type="sector_slicing.py" name="sector_node" output="screen">
        <param name="save_dir" value="$(arg base_map_dir)/maps/$(arg map_name)"/>
    </node>

    <!-- Launch Overtaking Sector Slicer from Utils -->
    <node pkg="overtaking_sector_tuner" type="ot_sector_slicing.py" name="ot_sector_node" output="screen">
        <param name="save_dir" value="$(arg base_map_dir)/maps/$(arg map_name)"/>
    </node>

    <!--  launch gb repub without arguments when mapping-->
    <node name="global_republisher" pkg="gb_optimizer" type="global_trajectory_publisher.py" output="screen"/>

  </group>
  <!-- ELSE CONDITION ON MAPPING_BOOL -->
  <group unless="$(arg mapping_bool)">
    <!--  launch Frenet Conversion Service (only usefull when global trajectory exists) -->
    <node pkg="frenet_conversion_server" name="frenet_conversion_server_node" type="frenet_conversion_server_node" output="screen">
        <param name="PerceptionOnly" type="bool" value="false"/>
    </node>
    
    <!--  launch dynamic reconfigure for the sectors -->
    <node pkg="sector_tuner" type="sector_server.py" name="dyn_sector_server" output="screen"/>
    <node pkg="overtaking_sector_tuner" type="ot_sector_server.py" name="ot_dyn_sector_server" output="screen"/>

    <!--  launch Velocity Interpolator for dynamic sector -->
    <include file="$(find sector_tuner)/launch/velocity_scaler.launch">
        <arg name="debug_plot" value="False" />
    </include>

    <!--  launch Overtaking Interpolator for dynamic ot_sector -->
    <node pkg="overtaking_sector_tuner" type="ot_interpolator.py" name="ot_interpolator" output="screen"/>

    <rosparam ns="map_params" command="load" file="$(arg base_map_dir)/maps/$(arg map_name)/speed_scaling.yaml"/>
    <rosparam ns="ot_map_params" command="load" file="$(arg base_map_dir)/maps/$(arg map_name)/ot_sectors.yaml"/>
  
    <!--  launch gb repub -->
    <node name="global_republisher" pkg="gb_optimizer" type="global_trajectory_publisher.py" output="screen">
      <param name="map_name" value="$(arg map_name)"/>
    </node>
  </group>

  <!-- Begin the simulator with the parameters from params.yaml -->
  <node pkg="f1tenth_simulator" name="f1tenth_simulator" type="simulator" output="screen">
    <rosparam command="load" file="$(find f1tenth_simulator)/pbl_params.yaml"/>
    <rosparam command="load" file="$(arg base_map_dir)/maps/$(arg map_name)/$(arg map_name).yaml"/>
  </node>

  <!-- Launch RVIZ -->
  <group if="$(arg rviz)">
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find f1tenth_simulator)/launch/simulator.rviz" output="screen"/>
  </group>
</launch>
