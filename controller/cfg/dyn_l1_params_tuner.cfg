#!/usr/bin/env python3
PACKAGE = "controller"
import rospkg
import yaml, os
import rospy
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# TODO Verify if default, min and max values make sense (last three values in that order)
#L1 Parameters (Lateral Controller)
gen.add("t_clip_min",    double_t,    0, "minimum l1 distance", 0.3,  0, 1.5)
gen.add("t_clip_max",    double_t,    0, "maximum l1 distance", 5,  0, 10)
gen.add("m_l1",    double_t,    0, "slope l1/velocity relation",  0.3,  0, 1.0)  # default = 0.583
gen.add("q_l1",    double_t,    0, "intercept of l1/velocity relation", 0.1569,  -1, 1)
gen.add("speed_lookahead",    double_t,    0, "time of forward propagation with constant velocity", 0,  0, 1)
gen.add("lat_err_coeff",    double_t,    0, "0 means no account for lateral error, 1 means maximum accounting", 1.0,  0, 1.0)
gen.add("acc_scaler_for_steer",    double_t,    0, "acceleration scaler for steer", 1.0,  0, 1.5)
gen.add("dec_scaler_for_steer",    double_t,    0, "deceleration scaler for steer", 1.0,  0, 1.5)
gen.add("start_scale_speed",    double_t,    0, "up to this speed the steer is normal", 7.0,  0, 10.0)
gen.add("end_scale_speed",    double_t,    0, "from this speed on the speed is (1-downscale_factor) and between it linearly goes down", 8.0,  0, 10.0)
gen.add("downscale_factor",    double_t,    0, "downscale factor", 0.2,  0, 0.5)
gen.add("speed_lookahead_for_steer",    double_t,    0, "time of forward propagation", 0.0,  0, 0.2) 
# Trailing Controller Parameters

gen.add("prioritize_dyn",    bool_t,    0, "Always prioritize Dynamic obstacle, even if Static is closer")
gen.add("trailing_gap",    double_t,    0, "Gap to the Opponent in Meters or Seconds", 0.0,  0, 3)
gen.add("trailing_p_gain",    double_t,    0, "P-Gain of Trailing Controller", 0.0,  0, 3)
gen.add("trailing_i_gain",    double_t,    0, "I-Gain of Trailing Controller", 0.0,  0, 0.5)
gen.add("trailing_d_gain",    double_t,    0, "D-Gain of Trailing Controller", 0.0,  0, 1)
gen.add("blind_trailing_speed",    double_t,    0, "Minimal Speed of Trailing when not seeing the opponent", 1.5,  0, 3)

exit(gen.generate(PACKAGE, "dynamic_l1_params", "dyn_l1_params_tuner"))
