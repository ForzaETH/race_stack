#!/usr/bin/env python3
PACKAGE = "sector_tuner"
import rospkg
import yaml, os
from dynamic_reconfigure.parameter_generator_catkin import *

ros_path = rospkg.RosPack().get_path('sector_tuner')
yaml_path = os.path.join(ros_path, 'cfg/speed_scaling.yaml')
if os.path.isfile(yaml_path):
    with open(yaml_path) as file:
        sector_dict = yaml.load(file, Loader=yaml.FullLoader)

    gen = ParameterGenerator()

    gen.add("global_limit",    double_t,    0, "Velocity scaling applied globally", sector_dict['global_limit'],  0, 1)

    only_sectors = {k: v for k, v in sector_dict.items() if k.startswith('Sector')}

    i = 0
    #Generate dynamic reconfigure according to how many sectors are defined
    for key, item in only_sectors.items():
        #name, paramtype, level, description, default, min, max
        gen.add("Sector" + str(i),    double_t,    0, "Sector scaling from s: {} - {} [m]".format(item['start'], item['end']), item['scaling'],  0, 1)
        gen.add("OnlyFTG" + str(i),   bool_t,   1, "Use only FTG in Sector{}".format(i),  item['only_FTG'])
        gen.add("NoFTG" + str(i),   bool_t,   2, "No FTG in Sector{}".format(i),  item['no_FTG'])
        i += 1
else:
    gen = ParameterGenerator()
    gen.add("global_limit",    double_t,    0, "Velocity scaling applied globally", 0.69,  0, 1)
    gen.add("Sector" + str(0),    double_t,    0, "Sector scaling from s: {} - {} [m]".format(0, 69), 0.69,  0, 1)
    gen.add("OnlyFTG" + str(0),   bool_t,   1, "Use only FTG in Sector{}".format(0),  False)
    gen.add("NoFTG" + str(0),   bool_t,   2, "No FTG in Sector{}".format(0),  False)

exit(gen.generate(PACKAGE, "dynamic_sector", "dyn_sect_tuner"))
