<?xml version="1.0"?>
<launch>
    <!-- You can visit https://drive.google.com/drive/folders/1zUVJ-IyTZFsJCbyaZiJhcrHiyxe9goSl to
    get some sample rosbags from ICRA22 (request permission first) -->
    <param name="/use_sim_time" value="true" />
    <arg name="bag" default="office/office_1603_2023_v1.bag" />
    <arg name="map_name" default="office_1603_2023_v1" />
    <arg name="algo" default="slam" />
    <arg name="odom_topic" default="state_estimation/odom" />
    <arg name="racecar_version" default="NUC2" />
    <arg name="pre_mapping_filter" default="ekf" />
    <arg name="start" default="0" />
    <arg name="include_SE" default="False" />
    <arg name="use_IO" default="False" />

    <!-- Launch ROSBAG. -->
    <arg name="bag_path" value="$(find slam_tuner)/data/$(arg bag)" />

    <!-- to test entire SE pipeline -->
    <group if="$(eval arg('include_SE'))">
        <node pkg="rosbag" type="play" name="player" output="screen"
            args="$(arg bag_path)
            --clock --quiet --start $(arg start)
            --topics /create_plot
            /scan /vesc/odom /vesc/sensors/imu/raw
            /vesc/low_level/ackermann_cmd_mux/input/teleop
            /vesc/high_level/ackermann_cmd_mux/input/nav_1
            /car_state/pose ">
            <remap from="/car_state/pose" to="/car_state_bag/pose" />
        </node>
    </group>

    <!-- case where state estimations should be taken form bag -->
    <group unless="$(eval arg('include_SE'))">
        <node pkg="rosbag" type="play" name="player" output="screen"
            args="$(arg bag_path)
            --clock --quiet --start $(arg start)
            --topics /create_plot
            /scan /vesc/odom /vesc/sensors/imu/raw
            /vesc/low_level/ackermann_cmd_mux/input/teleop
            /vesc/high_level/ackermann_cmd_mux/input/nav_1
            /car_state/pose /$(arg odom_topic) ">
            <remap from="/car_state/pose" to="/car_state_bag/pose" />
        </node>
    </group>


    <!-- Static transforms (not always latched to bag) -->
    <!-- <arg name="pub_tf" value="$(eval arg('algo')=='pf2' or arg('algo')=='slam')" /> -->
    <arg name="pub_tf" value="True" />
    <include file="$(find stack_master)/launch/includes/$(arg racecar_version)/static_transforms.launch.xml">
        <arg name="pub_map_to_odom" value="$(eval arg('pub_tf'))" />
    </include>

    <!-- This publishes the odom=>base-link transform from bag. -->
    <!-- <group unless="$(eval arg('pub_tf'))">
        <node pkg="transform_broadcaster" type="transform_broadcaster.py"
            name="transform_broadcaster">
            <param name="odom_topic" value="$(arg odom_topic)" />
        </node>
    </group> -->

    <!-- Launch RVIZ -->
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find slam_tuner)/rviz/tuner.rviz" />

    <group if="$(eval arg('include_SE'))">
        <include file="$(find racecar)/launch/SE_launch.launch">
            <arg name="use_IO" value="$(arg use_IO)" />
            <arg name="loc_algo" value="$(arg algo)" />
            <arg name="pose_loc_topic" default="/tracked_pose" />
            <arg name="odom_vesc_topic" default="/vesc/odom" />
            <arg name="odom_io_topic" default="/inertial_odometry/odom" /> # inertial odometry
            <arg name="imu_topic" default="/vesc/sensors/imu/raw" />
            <arg name="pre_mapping_filter" value="$(arg pre_mapping_filter)" /> # 'none' or 'ekf'
            <arg name="publish_tf" value="False" />
            <arg name="pf_covariance" value="True" />
            <arg name="loc_only" value="True" />
            <arg name="map_name" value="$(arg map_name)" />
            <arg name="odom_topic" value="$(arg odom_topic)" />
            <arg name="racecar_version" value="$(arg racecar_version)" />
            <arg name="slam_config_path" value="$(find slam_tuner)/config" />
        <arg name="pf_covariance" value="True" />
        </include>
    </group>
</launch>