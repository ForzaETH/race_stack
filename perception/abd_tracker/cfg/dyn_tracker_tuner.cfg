#!/usr/bin/env python3
PACKAGE = "perception"
import rospkg
import yaml, os
from dynamic_reconfigure.parameter_generator_catkin import *

ros_path = rospkg.RosPack().get_path('perception')

gen = ParameterGenerator()
# tracking
gen.add("ttl_dynamic", int_t, 0, "Time to live of dynamic preditction from kalman filter", 40, 5, 300)
gen.add("ratio_to_glob_path", double_t, 0, "the ratio between the target velocity and the global velocity", 0.6, 0.1, 2)
gen.add("ttl_static", int_t, 0, "time to live of static and not classified obstacles", 3, 1, 20)
gen.add("min_nb_meas", int_t, 0, "minimum number of measurments before classifying an object", 5, 3, 10)
gen.add("dist_deletion", double_t, 0, "distance in which obstacles can be deleted", 7, 3, 10)
gen.add("dist_infront", double_t, 0, "obstacles infront of the car by this distance are published", 8, 3, 10)
gen.add("min_std", double_t, 0, "minimum standard deviation under which obstacles are classified as static", 0.16, 0.05, 0.3)
gen.add("max_std", double_t, 0, "mamixmum standard deviation over which obstacles are classified as dynamic", 0.2, 0.15, 0.5)
gen.add("vs_reset", double_t, 0, "average velocity in s direction under which dynamic obstacle gets reset to static", 0.1, 0.01, 0.5)
gen.add("aggro_multi", double_t, 0, "multplies the association distance for dynamic obstacles", 2, 1, 10)
gen.add("debug_mode", bool_t, 0, "activate/deactivate prints for debugging", False)
gen.add("publish_static", bool_t, 0, "activate/deactivate publishing of static obstacles", True)
gen.add("noMemoryMode", bool_t, 0, "sets tracking into no Memory mode", True)

# detection
gen.add("min_obs_size", int_t, 0, "minimum cloud point size of an obstacle", 10, 5, 40)
gen.add("max_obs_size", double_t, 0, "maximum size of an obstacle in meters", 0.5, 0.1, 1)
gen.add("max_viewing_distance", double_t, 0, " max reliable distance from the LiDAR", 9, 3, 10)
gen.add("boundaries_inflation", double_t, 0, "Offset of the track boundaries towards the center", 0.1, 0, 2)


exit(gen.generate(PACKAGE, "tracker_dynamic_tuner", "dyn_tracker_tuner"))