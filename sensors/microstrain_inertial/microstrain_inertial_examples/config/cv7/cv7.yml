microstrain_inertial_driver:
  ros__parameters:
    # You should change this section of config to match your setup
    port : '/dev/microstrain_main'
    baudrate : 115200

    # This will cause the node to convert any NED measurements to ENU
    # This will also cause the node to convert any vehicle frame measurements to the ROS definition of a vehicle frame
    use_enu_frame : True

    # Configure some frame IDs
    frame_id : 'cv7_link'  # Frame ID of all of the filter messages. Represents the location of the CV7-INS in the tf tree

    # Disable the transform from the mount to frame id transform as it will be handled in the launch file
    publish_mount_to_frame_id_transform : False

    # This will set the initial heading alignment to use the magnetometer
    filter_auto_heading_alignment_selector : 4

    # During operation, we will assume that we are in a wheeled vehicle for more accurate heading
    # If using a drone, disable this option, and enable "filter_enable_magnetometer_aiding"
    filter_enable_wheeled_vehicle_constraint : True

    # Disable some heading options that do not work for this device
    filter_enable_gnss_pos_vel_aiding : False
    filter_enable_gnss_heading_aiding : False

    # This example shows a very basic setup with no PPS sync, so this will disable PPS on the device.
    # Note that if you have any way to provide PPS, you should setup PPS
    filter_pps_source : 0

    # Disable the filter declination source. This is required to get the node to start, and isn't doing anything special
    filter_declination_source : 1